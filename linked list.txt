#include <stdio.h>
#include <stdlib.h>

struct node
{
    int data;
    struct node *link;
};

typedef struct node *NODE;

NODE getnode(void)
{
    NODE temp;
    temp = (NODE)malloc(sizeof(struct node));
    if (temp == NULL)
    {
        printf("No memory allocated\n");
        exit(1);
    }
    return temp;
}

NODE insert_front(NODE first, int ele)
{
    NODE temp;
    temp = getnode();
    temp->data = ele;
    temp->link = first; // Point to the previous first node

    return temp; // New first node is temp
}

NODE insert_rear(NODE first, int ele)
{
    NODE temp, cur;
    temp = getnode();
    temp->data = ele;
    temp->link = NULL; // Last node points to NULL

    if (first == NULL) // If list is empty
    {
        first = temp; // First becomes the new node
    }
    else
    {
        cur = first;
        while (cur->link != NULL) // Traverse to the last node
        {
            cur = cur->link;
        }
        cur->link = temp; // Last node now points to the new node
    }

    return first; // Return the unchanged first node
}

void display(NODE first)
{
    NODE temp = first;

    if (temp == NULL)
    {
        printf("List is empty\n");
        return;
    }

    printf("List elements: ");
    while (temp != NULL)
    {
        printf("%d ", temp->data);
        temp = temp->link;
    }
    printf("\n");
}

NODE delete_front(NODE first)
{
    
    NODE temp;
    if(temp== nuk)
}
int main()
{
    NODE first = NULL;
    int choice, item;

    while (1)
    {
        printf("\n1. Insert Front\n");
        printf("2. Insert Rear\n");
        printf("3. Display\n");
        printf("4. Exit\n");

        printf("Enter your choice: ");
        scanf("%d", &choice);

        switch (choice)
        {
        case 1:
            printf("Enter the number to be inserted at front: ");
            scanf("%d", &item);
            first = insert_front(first, item);
            break;

        case 2:
            printf("Enter the number to be inserted at rear: ");
            scanf("%d", &item);
            first = insert_rear(first, item);
            break;

        case 3:
            display(first);
            break;

        case 4:
            printf("Exiting...\n");
            exit(0); // Exit the program

        default:
            printf("Enter a valid choice\n");
            break;
        }
    }

    return 0;
}